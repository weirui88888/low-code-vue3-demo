name: Build Manual Event

on:
  push:
    branches:
      - event-*
    paths-ignore:
      - 'src/appConfig/**'

jobs:
  buildStagingManualEvent:
    name: Build Staging Manual
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{secrets.GITHUB_TOKEN}}

      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          clean: true

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Install Dependencies & Build Production
        run: |
          npm install
          npm run build:staging

      - name: Create Staging Offline Scope
        id: getLatestVersion
        run: |
          export offline_version=$(date +%s)
          export scopeTemplate='{"cacheStrategy":{"type":"agile"},"latestVersion":%s,"latestVersionDownloadUrl":"https://test-vue3.newarray.vip/%s/offline.zip"}'
          export scope=$(printf "$scopeTemplate" "$offline_version" "$BRANCHNAME")
          echo "latestVersion=$offline_version" >> $GITHUB_OUTPUT
          echo $scope > scope-dev.json
        env:
          BRANCHNAME: ${{github.ref_name}}

      - name: Prepare Offline Package
        run: |
          cp -r dist offline

      - name: Create Offline Package
        uses: vimtor/action-zip@v1
        with:
          files: ./offline
          dest: offline.zip

      - name: Setup OSS Util
        uses: manyuanrong/setup-ossutil@v3.0
        with:
          endpoint: oss-cn-hangzhou.aliyuncs.com
          access-key-id: LTAI5tDHY7ZE8GqU8Ysteq48
          access-key-secret: DBhHbx7XRV3IJSnjQeHKJlmQeCys6t

      - name: Upload Files to OSS
        run: |
          ossutil rm oss://test-action-vue3-demo/${GITHUB_REF##*/}/ --include "*" -r -f
          ossutil cp dist/ oss://test-action-vue3-demo/${GITHUB_REF##*/}/ -r -f
          ossutil cp offline.zip oss://test-action-vue3-demo/${GITHUB_REF##*/}/ -r -f
          ossutil cp --meta Content-Type:application/json scope-dev.json oss://action-vue3-demo/ -r -f
  buildManualEvent:
    name: Build Manual Event
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{secrets.GITHUB_TOKEN}}

      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          clean: true

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Install Dependencies & Build Production
        run: |
          npm install
          npm run build

      - name: Version
        id: versionGenerator
        run: |
          echo "BUILD_VERSION=$(date "+%y%m%d").$GITHUB_RUN_NUMBER"
          echo "BUILD_VERSION=$(date "+%y%m%d").$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
          echo "version=$(date "+%y%m%d").$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

      - name: Package
        run: |
          find dist -name "*.map" -exec rm -rf {} \;
          tar -czf vue3-demo-${BUILD_VERSION}.tar.gz ./dist

      - name: Parse Changelog
        id: changelog
        uses: coditory/changelog-parser@v1

      - name: Create Release Draft
        run: |
          gh release create ${{github.ref_name}}-v${{steps.changelog.outputs.version}} vue3-demo-*.tar.gz \
            --target ${{github.ref_name}} \
            --draft \
            --title "${{github.ref_name}}-v${{steps.changelog.outputs.version}}" \
            --notes "$(cat << 'EOM' 
          ${{ steps.changelog.outputs.description }} 
          EOM
          )"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
