name: Rollback Manual

on:
  repository_dispatch:
    types: [rollback-manual]

jobs:
  release:
    name: Rollback Manual
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{secrets.GITHUB_TOKEN}}

      - name: Download Assets
        id: downloadAssets
        uses: ButterCam/download-asset-action@main
        with:
          repository: ${{github.repository}}
          tag: ${{github.event.client_payload.version}}
          asset: vue3-demo
          token: ${{secrets.GITHUB_TOKEN}}

      - name: UnPackage
        run: tar -xzf ${{steps.downloadAssets.outputs.name}}

      - name: Create Offline Scope
        id: getLatestVersion
        run: |
          export offline_version=$(date +%s)
          export scopeTemplate='{"cacheStrategy":{"type":"agile"},"latestVersion":%s,"latestVersionDownloadUrl":"https://vue3.newarray.vip/%s/%s/offline.zip"}'
          export scope=$(printf "$scopeTemplate" "$offline_version" "$BRANCH" "$VERSION")
          echo "latestVersion=$offline_version" >> $GITHUB_OUTPUT
          echo $scope > scope.json
        env:
          BRANCH: ${{github.event.client_payload.branch}}
          VERSION: ${{github.event.client_payload.version}}

      - name: Prepare OfflineCopy Package
        run: |
          rm -rf offlineCopy
          rm -rf "offlineCopy offlineCopy.zip"
          mkdir offlineCopy

      - name: Setup OSS Util
        uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: oss-cn-hangzhou.aliyuncs.com
          access-key-id: LTAI5tDHY7ZE8GqU8Ysteq48
          access-key-secret: DBhHbx7XRV3IJSnjQeHKJlmQeCys6t

      - name: Modify Offline.zip index.html
        run: |
          ossutil cp oss://action-vue3-demo/$BRANCH/$VERSION/offline.zip ./offlineCopy -r -f
          cd offlineCopy
          unzip -o offline.zip
          ls -al
          sed -i 's#<meta offline-package="[0-9]*"#<meta offline-package="'$LATESTVERSION'"#g' index.html
          rm -rf offline.zip
          ls -al
        env:
          TAG: ${{github.event.client_payload.tag}}
          BRANCH: ${{github.event.client_payload.branch}}
          VERSION: ${{github.event.client_payload.version}}
          LATESTVERSION: ${{steps.getLatestVersion.outputs.latestVersion}}

      - name: Recreate Offline Package Zip
        uses: vimtor/action-zip@v1
        with:
          files: ./offlineCopy
          dest: offlineCopy.zip

      - name: Replace Oss Offline.zip
        run: |
          ossutil rm oss://action-vue3-demo/$BRANCH/$VERSION/offline.zip -r -f
          ossutil cp offlineCopy.zip oss://action-vue3-demo/$BRANCH/$VERSION/offline.zip -f
          rm -rf offlineCopy
          rm -rf offlineCopy.zip
          ls -al
        env:
          TAG: ${{github.event.client_payload.tag}}
          BRANCH: ${{github.event.client_payload.branch}}
          VERSION: ${{github.event.client_payload.version}}

      - name: Upload Files to OSS
        run: |
          ossutil cp scope.json oss://action-vue3-demo/ -r -f

      - name: Get Cdn Domain Configs
        uses: iou90/aliCdn@v1.0.0
        id: getCdnDomainConfigs
        with:
          accessKeyId: LTAI5tDHY7ZE8GqU8Ysteq48
          appSecret: DBhHbx7XRV3IJSnjQeHKJlmQeCys6t
          action: DescribeCdnDomainConfigs
          parameters: '{ "DomainName": "vue3.newarray.vip", "FunctionNames": "back_to_origin_url_rewrite" }'

      - name: Set Cdn Action Parameters
        id: setCdnAction
        run: |
          export configId=$(echo $RESULT | jq '.DomainConfigs.DomainConfig[0].ConfigId')
          export sourceUrl='^(/(?:(?!\\w+/v\\d+(?:\\.\\d*)*/).*))'
          export functionsValue=$(printf '[{"functionName":"back_to_origin_url_rewrite","functionArgs":[{"argName":"source_url","argValue":"%s"},{"argName":"target_url","argValue":"/%s/%s$1"}],"configId":%s}]' $sourceUrl $BRANCH $VERSION $configId)
          export normalizedFunctions=$(echo $functionsValue | jq --raw-input)
          export actionParameters=$(printf '{ "DomainNames": "vue3.newarray.vip", "Functions": %s }' $normalizedFunctions)
          echo ::set-output name=parameters::$(echo $actionParameters)
        env:
          RESULT: ${{ steps.getCdnDomainConfigs.outputs.result }}
          BRANCH: ${{github.event.client_payload.branch}}
          VERSION: ${{github.event.client_payload.version}}

      - name: Rewrite Cdn back_to_origin_url
        uses: iou90/aliCdn@v1.0.0
        with:
          accessKeyId: LTAI5tDHY7ZE8GqU8Ysteq48
          appSecret: DBhHbx7XRV3IJSnjQeHKJlmQeCys6t
          action: BatchSetCdnDomainConfig
          parameters: ${{ steps.setCdnAction.outputs.parameters }}

      - name: Wait For Rewriting
        run: sleep 50

      - name: Refresh Cdn cache
        uses: iou90/aliCdn@v1.0.0
        with:
          accessKeyId: LTAI5tDHY7ZE8GqU8Ysteq48
          appSecret: DBhHbx7XRV3IJSnjQeHKJlmQeCys6t
          action: RefreshObjectCaches
          parameters: '{ "ObjectPath": "https://vue3.newarray.vip/", "ObjectType": "Directory" }'
